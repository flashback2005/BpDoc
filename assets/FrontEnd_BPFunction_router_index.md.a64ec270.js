import{_ as t,o as e,c as o,Q as d}from"./chunks/framework.a65da182.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"FrontEnd/BPFunction/router/index.md","filePath":"FrontEnd/BPFunction/router/index.md","lastUpdated":1693991387000}'),r={name:"FrontEnd/BPFunction/router/index.md"},a=d('<h2 id="路由的主要作用" tabindex="-1">路由的主要作用 <a class="header-anchor" href="#路由的主要作用" aria-label="Permalink to &quot;路由的主要作用&quot;">​</a></h2><ol><li>vue-router的功能</li><li>通过meta判定该页面的依赖属性, 通过<code>beforeEach</code>进行拦截判断</li></ol><table><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>noAccount</td><td>Boolean</td><td>该页面不需要自动连接钱包, true是不需要</td></tr><tr><td>needChains</td><td>Array</td><td>该页面需要依赖的链</td></tr><tr><td>needTips</td><td>Boolean</td><td>该页面需要依赖某链，如果链不对，则弹出提示</td></tr></tbody></table><h2 id="useroutertools" tabindex="-1">useRouterTools <a class="header-anchor" href="#useroutertools" aria-label="Permalink to &quot;useRouterTools&quot;">​</a></h2><p>由于<code>vue-router</code>是异步的原因，所以一些情况下是不能通过<code>useRoute</code>获取路由信息的。</p><p>该工具是对于某些特定情况下，不能通过<code>useRoute</code>获取路由信息的一个补给</p><table><thead><tr><th>方法名</th><th>描述</th></tr></thead><tbody><tr><td>useRouteItem</td><td>获取当前路由项的信息，执行一次获取一次，不具有响应式</td></tr><tr><td>useRouteMeta</td><td>获取当前路由meta信息，执行一次获取一次，不具有响应式</td></tr><tr><td>useRouteQuery</td><td>获取当前路由的query信息，执行一次获取一次，不具有响应式</td></tr><tr><td>useRouteItemRef</td><td>获取当前路由项信息 hook，具有响应式</td></tr></tbody></table><p>其中<code>useRouteItemRef</code>是一个hook，要想使用他，必须确保在main.ts中开启<code>watchUrl()</code></p><p>tips: 大部分情况下可以用这个平替<code>useRoute</code>的功能，</p><p>但是，不能获取跳转的时候<code>params</code>的参数对象。</p>',10),n=[a];function s(u,c,i,h,l,_){return e(),o("div",null,n)}const b=t(r,[["render",s]]);export{m as __pageData,b as default};
