import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a65da182.js";const b=JSON.parse('{"title":"BpButton","description":"","frontmatter":{},"headers":[],"relativePath":"FrontEnd/BPComponents/BpButton/index.md","filePath":"FrontEnd/BPComponents/BpButton/index.md","lastUpdated":1693990675000}'),o={name:"FrontEnd/BPComponents/BpButton/index.md"},p=l(`<h1 id="bpbutton" tabindex="-1">BpButton <a class="header-anchor" href="#bpbutton" aria-label="Permalink to &quot;BpButton&quot;">​</a></h1><h3 id="主要作用" tabindex="-1">主要作用 <a class="header-anchor" href="#主要作用" aria-label="Permalink to &quot;主要作用&quot;">​</a></h3><ol><li>主要是显示没有连接对的链的话，就显示连接文案.</li><li>置灰显示</li></ol><p>使用按钮的时候，与链上有交易的请求，统一使用全局组件<code>BpButton</code>，需要有加载状态<code>loading</code>。一些普通的操作DOM按钮可以不使用该组件。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">const [handleClick, loadClick] = useWrite(async () =&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  await lpObj.claimAllReward();</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">bp-button</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-loading</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">loadClick</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> @</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">handleClick</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;click-box&quot;</span><span style="color:#E1E4E8;">&gt;bp写操作&lt;/</span><span style="color:#85E89D;">bp-button</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">const [handleClick, loadClick] = useWrite(async () =&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  await lpObj.claimAllReward();</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bp-button</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-loading</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">loadClick</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> @</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">handleClick</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;click-box&quot;</span><span style="color:#24292E;">&gt;bp写操作&lt;/</span><span style="color:#22863A;">bp-button</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h4 id="置灰" tabindex="-1">置灰： <a class="header-anchor" href="#置灰" aria-label="Permalink to &quot;置灰：&quot;">​</a></h4><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">const isDisable = ref(false); // 是否置灰按钮</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">BpButton</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">class</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;blue-btn&quot;</span><span style="color:#E1E4E8;"> @</span><span style="color:#B392F0;">click</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">func</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> :</span><span style="color:#B392F0;">disable</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">isDisable</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">&gt;点击&lt;/</span><span style="color:#85E89D;">BpButton</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">const isDisable = ref(false); // 是否置灰按钮</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">BpButton</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;blue-btn&quot;</span><span style="color:#24292E;"> @</span><span style="color:#6F42C1;">click</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">func</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> :</span><span style="color:#6F42C1;">disable</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">isDisable</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">&gt;点击&lt;/</span><span style="color:#22863A;">BpButton</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h3><p>blockpulse_dapp 自带</p>`,9),t=[p];function e(c,r,E,i,y,d){return a(),n("div",null,t)}const F=s(o,[["render",e]]);export{b as __pageData,F as default};
